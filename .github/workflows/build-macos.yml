name: Build Universal macOS AmigaLive

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-macos-universal:
    runs-on: macos-latest

    steps:
      # Step 1: Checkout repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Setup Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 22

      # Step 3: Install Rust
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      # Step 4: Install npm dependencies and Tauri CLI
      - name: Install dependencies
        working-directory: src-tauri
        run: |
          npm install
          npm install -g @tauri-apps/cli
          curl https://sh.rustup.rs -sSf | sh -s -- -y
          . "$HOME/.cargo/env"

      # Step 5: Build Intel x86_64 macOS
      - name: Build Intel x86_64
        working-directory: src-tauri
        run: |
          rustup target add x86_64-apple-darwin
          npm run tauri build -- --target x86_64-apple-darwin

      # Step 6: Build Apple Silicon aarch64 macOS
      - name: Build Apple Silicon aarch64
        working-directory: src-tauri
        run: |
          rustup target add aarch64-apple-darwin
          npm run tauri build -- --target aarch64-apple-darwin

      # Step 7: Merge apps into universal binary
      - name: Create universal macOS app
        working-directory: src-tauri
        run: |
          mkdir -p target/release/bundle/macos
          # Move architecture-specific builds
          mv target/x86_64-apple-darwin/release/bundle/macos/AmigaLive.app target/release/bundle/macos/AmigaLive-x86_64.app
          mv target/aarch64-apple-darwin/release/bundle/macos/AmigaLive.app target/release/bundle/macos/AmigaLive-aarch64.app
          # Ensure Contents/MacOS exists for universal app
          mkdir -p target/release/bundle/macos/AmigaLive.app/Contents/MacOS
          # Merge Mach-O binaries into one universal binary
          lipo -create \
            target/release/bundle/macos/AmigaLive-x86_64.app/Contents/MacOS/AmigaLive \
            target/release/bundle/macos/AmigaLive-aarch64.app/Contents/MacOS/AmigaLive \
            -output target/release/bundle/macos/AmigaLive.app/Contents/MacOS/AmigaLive

      # Step 8: Upload universal macOS artifacts
      - name: Upload universal macOS artifacts
        uses: actions/upload-artifact@v4
        with:
          name: AmigaLive-macOS-universal
          path: src-tauri/target/release/bundle/macos/*


  build-linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with: node-version: 22
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - name: Install dependencies
        working-directory: src-tauri
        run: |
          npm install
          npm install -g @tauri-apps/cli
          curl https://sh.rustup.rs -sSf | sh -s -- -y
          . "$HOME/.cargo/env"
      - name: Build Linux app
        working-directory: src-tauri
        run: npm run tauri build
      - name: Upload Linux artifacts
        uses: actions/upload-artifact@v4
        with:
          name: AmigaLive-Linux
          path: src-tauri/target/release/bundle/linux/*

  build-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with: node-version: 22
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - name: Install dependencies
        working-directory: src-tauri
        run: |
          npm install
          npm install -g @tauri-apps/cli
      - name: Build Windows app
        working-directory: src-tauri
        run: npm run tauri build
      - name: Upload Windows artifacts
        uses: actions/upload-artifact@v4
        with:
          name: AmigaLive-Windows
          path: src-tauri/target/release/bundle/msi/*

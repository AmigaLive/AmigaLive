name: Build AmigaLive Cross-Platform

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-macos-universal:
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 22

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Install dependencies
        working-directory: src-tauri
        run: |
          npm install
          npm install -g @tauri-apps/cli
          curl https://sh.rustup.rs -sSf | sh -s -- -y
          . "$HOME/.cargo/env"

      - name: Build Intel x86_64
        working-directory: src-tauri
        run: |
          rustup target add x86_64-apple-darwin
          npm run tauri build -- --target x86_64-apple-darwin

      - name: Build Apple Silicon aarch64
        working-directory: src-tauri
        run: |
          rustup target add aarch64-apple-darwin
          npm run tauri build -- --target aarch64-apple-darwin

      - name: Create universal macOS app
        working-directory: src-tauri
        run: |
          mkdir -p target/release/bundle/macos
          mv target/x86_64-apple-darwin/release/bundle/macos/AmigaLive.app target/release/bundle/macos/AmigaLive-x86_64.app
          mv target/aarch64-apple-darwin/release/bundle/macos/AmigaLive.app target/release/bundle/macos/AmigaLive-aarch64.app
          mkdir -p target/release/bundle/macos/AmigaLive.app/Contents/MacOS
          lipo -create \
            target/release/bundle/macos/AmigaLive-x86_64.app/Contents/MacOS/AmigaLive \
            target/release/bundle/macos/AmigaLive-aarch64.app/Contents/MacOS/AmigaLive \
            -output target/release/bundle/macos/AmigaLive.app/Contents/MacOS/AmigaLive

      - name: Upload macOS artifact
        uses: actions/upload-artifact@v4
        with:
          name: AmigaLive-macOS-universal
          path: src-tauri/target/release/bundle/macos/*

  build-linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 22
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Install Linux system dependencies
        run: |
          sudo apt update
          sudo apt install -y \
            pkg-config \
            libglib2.0-dev \
            libgtk-3-dev \
            build-essential \
            libwebkit2gtk-4.1-dev \
            libsoup-3.0-dev \
            libjavascriptcoregtk-4.1-dev \
            wget \
            fuse \
            patchelf

      - name: Install npm and Tauri
        working-directory: src-tauri
        run: |
          npm install
          npm install -g @tauri-apps/cli
          curl https://sh.rustup.rs -sSf | sh -s -- -y
          . "$HOME/.cargo/env"

      - name: Fix AppImage permissions before build
        run: |
          chmod +x /usr/bin/* || true
          chmod +x ~/.cargo/bin/* || true

      - name: Build Linux app (AppImage + deb)
        working-directory: src-tauri
        run: |
          npm run tauri build || true
          # Ensure linuxdeploy binaries are executable if downloaded
          chmod +x target/release/bundle/appimage/*.AppImage || true
          chmod +x target/release/bundle/appimage/* || true
          # Retry build to finalize AppImage creation
          npm run tauri build

      - name: Upload Linux artifacts
        uses: actions/upload-artifact@v4
        with:
          name: AmigaLive-Linux
          path: |
            src-tauri/target/release/bundle/deb/*
            src-tauri/target/release/bundle/appimage/*

  build-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 22
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Install dependencies
        working-directory: src-tauri
        run: |
          npm install
          npm install -g @tauri-apps/cli

      - name: Build Windows app
        working-directory: src-tauri
        run: npm run tauri build

      - name: Upload Windows artifact
        uses: actions/upload-artifact@v4
        with:
          name: AmigaLive-Windows
          path: src-tauri/target/release/bundle/msi/*

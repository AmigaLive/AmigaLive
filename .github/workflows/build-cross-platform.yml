name: Build Cross-Platform AmigaLive

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-ubuntu:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt install -y libgtk-3-dev libwebkit2gtk-4.1-dev libayatana-appindicator3-dev librsvg2-dev patchelf

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      - name: Install Tauri CLI
        run: npm install -g @tauri-apps/cli

      - name: Build for Linux
        working-directory: src-tauri
        run: npm run tauri build

      - name: Upload Linux Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: AmigaLive-linux
          path: src-tauri/target/release/bundle/**

  build-macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      - name: Install Tauri CLI
        run: npm install -g @tauri-apps/cli

      - name: Build x86_64
        working-directory: src-tauri
        run: |
          rustup target add x86_64-apple-darwin
          npm run tauri build -- --target x86_64-apple-darwin

      - name: Build aarch64
        working-directory: src-tauri
        run: |
          rustup target add aarch64-apple-darwin
          npm run tauri build -- --target aarch64-apple-darwin

      - name: Create Universal macOS Binary
        working-directory: src-tauri
        run: |
          mkdir -p target/release/bundle/macos
          mv target/x86_64-apple-darwin/release/bundle/macos/AmigaLive.app target/release/bundle/macos/AmigaLive-x86_64.app
          mv target/aarch64-apple-darwin/release/bundle/macos/AmigaLive.app target/release/bundle/macos/AmigaLive-aarch64.app
          mkdir -p target/release/bundle/macos/AmigaLive.app/Contents/MacOS
          lipo -create \
            target/release/bundle/macos/AmigaLive-x86_64.app/Contents/MacOS/AmigaLive \
            target/release/bundle/macos/AmigaLive-aarch64.app/Contents/MacOS/AmigaLive \
            -output target/release/bundle/macos/AmigaLive.app/Contents/MacOS/AmigaLive

      - name: Upload macOS Artifact
        uses: actions/upload-artifact@v4
        with:
          name: AmigaLive-macos
          path: src-tauri/target/release/bundle/macos/**

  build-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      - name: Install Tauri CLI
        run: npm install -g @tauri-apps/cli

      - name: Build for Windows
        working-directory: src-tauri
        run: npm run tauri build

      - name: Upload Windows Artifact
        uses: actions/upload-artifact@v4
        with:
          name: AmigaLive-windows
          path: src-tauri/target/release/bundle/**

  upload-artifacts-to-ftp:
    name: Upload Build Artifacts to FTP
    runs-on: ubuntu-latest
    needs: [build-ubuntu, build-macos, build-windows]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist

      - name: Upload to FTP
        uses: SamKirkland/FTP-Deploy-Action@v4.3.4
        with:
          server: ${{ secrets.FTP_SERVER }}
          username: ${{ secrets.FTP_USERNAME }}
          password: ${{ secrets.FTP_PASSWORD }}
          protocol: ftps
          local-dir: dist/
          server-dir: ${{ secrets.FTP_TARGET_DIR || '/' }}
          log-level: minimal
